version: '3.8'

services:
  # Development environment
  opencode-slack-dev:
    build:
      context: .
      target: development
    container_name: opencode-slack-dev
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - DATABASE_PATH=/app/data/employees_dev.db
      - SESSIONS_DIR=/app/sessions
      - LOG_FILE=/app/logs/app_dev.log
      - LOG_LEVEL=DEBUG
      - MONITORING_ENABLED=true
      - DEBUG_MODE=true
    volumes:
      - ./data:/app/data
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      - ./.env.development:/app/.env.development:ro
    networks:
      - opencode-network
    restart: unless-stopped
    profiles:
      - dev

  # Production environment
  opencode-slack-prod:
    build:
      context: .
      target: production
    container_name: opencode-slack-prod
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - DATABASE_PATH=/var/lib/opencode-slack/employees.db
      - SESSIONS_DIR=/var/lib/opencode-slack/sessions
      - LOG_FILE=/var/log/opencode-slack/app.log
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
      - DEBUG_MODE=false
      - MAX_WORKERS=4
      - REQUEST_TIMEOUT=300
    volumes:
      - opencode-data:/var/lib/opencode-slack
      - opencode-logs:/var/log/opencode-slack
      - ./.env.production:/app/.env.production:ro
    networks:
      - opencode-network
    restart: unless-stopped
    profiles:
      - prod
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: opencode-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - opencode-network
    restart: unless-stopped
    profiles:
      - prod
      - dev
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: opencode-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - opencode-network
    depends_on:
      - opencode-slack-prod
    restart: unless-stopped
    profiles:
      - prod

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: opencode-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - opencode-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: opencode-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - opencode-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  opencode-network:
    driver: bridge

volumes:
  opencode-data:
    driver: local
  opencode-logs:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local