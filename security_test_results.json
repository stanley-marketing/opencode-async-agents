{
  "test_summary": {
    "total": 25,
    "passed": 23,
    "failed": 2,
    "errors": 0,
    "skipped": 0,
    "duration_seconds": 45.2,
    "timestamp": "2025-08-09T10:46:03.671330"
  },
  "categories": [
    {
      "category": "Authentication",
      "tests": [
        {
          "name": "Valid Login",
          "status": "pass",
          "details": "JWT token generated successfully"
        },
        {
          "name": "Invalid Login Rejection",
          "status": "pass",
          "details": "Correctly returned 401"
        },
        {
          "name": "Unauthorized Access Blocked",
          "status": "pass",
          "details": "Access denied without token"
        },
        {
          "name": "Authorized Access",
          "status": "pass",
          "details": "Access granted with valid token"
        },
        {
          "name": "Token Refresh",
          "status": "pass",
          "details": "New token generated successfully"
        }
      ]
    },
    {
      "category": "API Key Authentication",
      "tests": [
        {
          "name": "API Key Creation",
          "status": "pass",
          "details": "Key created with proper permissions"
        },
        {
          "name": "API Key Authentication",
          "status": "pass",
          "details": "Access granted with API key"
        },
        {
          "name": "API Key Listing",
          "status": "pass",
          "details": "Keys listed with masked values"
        }
      ]
    },
    {
      "category": "Rate Limiting",
      "tests": [
        {
          "name": "Rate Limiting Normal",
          "status": "pass",
          "details": "Rate limits enforced correctly"
        },
        {
          "name": "Concurrent Rate Limiting",
          "status": "pass",
          "details": "Handles concurrent requests properly"
        }
      ]
    },
    {
      "category": "Input Validation",
      "tests": [
        {
          "name": "XSS Prevention",
          "status": "pass",
          "details": "Script tags blocked"
        },
        {
          "name": "SQL Injection Prevention",
          "status": "pass",
          "details": "SQL injection attempts blocked"
        },
        {
          "name": "Path Traversal Prevention",
          "status": "pass",
          "details": "Directory traversal blocked"
        },
        {
          "name": "Command Injection Prevention",
          "status": "pass",
          "details": "Command execution attempts blocked"
        },
        {
          "name": "Input Validation Overall",
          "status": "pass",
          "details": "Blocked 9/10 malicious payloads"
        }
      ]
    },
    {
      "category": "Security Headers",
      "tests": [
        {
          "name": "Security Headers",
          "status": "fail",
          "details": "Missing: Permissions-Policy"
        },
        {
          "name": "CORS Headers",
          "status": "pass",
          "details": "Restrictive CORS configured"
        },
        {
          "name": "Content Security Policy",
          "status": "pass",
          "details": "CSP header present"
        }
      ]
    },
    {
      "category": "Authorization",
      "tests": [
        {
          "name": "Employee Read Access",
          "status": "pass",
          "details": "Admin can read employees"
        },
        {
          "name": "Employee Write Access",
          "status": "pass",
          "details": "Admin can create employees"
        },
        {
          "name": "Task Management Access",
          "status": "pass",
          "details": "Admin can manage tasks"
        },
        {
          "name": "Security Admin Access",
          "status": "pass",
          "details": "Admin can access security endpoints"
        }
      ]
    },
    {
      "category": "Error Handling",
      "tests": [
        {
          "name": "404 Error Handling",
          "status": "pass",
          "details": "No sensitive info leaked"
        },
        {
          "name": "Method Not Allowed",
          "status": "pass",
          "details": "Proper error response"
        },
        {
          "name": "Authentication Error",
          "status": "fail",
          "details": "Token format visible in error"
        }
      ]
    }
  ],
  "security_features": {
    "authentication": {
      "jwt_tokens": true,
      "api_keys": true,
      "session_management": true,
      "password_hashing": true
    },
    "authorization": {
      "role_based_access": true,
      "permission_based_access": true,
      "endpoint_protection": true
    },
    "security_measures": {
      "rate_limiting": true,
      "input_validation": true,
      "security_headers": true,
      "https_support": true,
      "audit_logging": true,
      "ip_filtering": true,
      "encryption": true
    }
  },
  "recommendations": [
    "Add missing Permissions-Policy header",
    "Improve error message sanitization to prevent token format leakage",
    "Consider implementing MFA for admin accounts",
    "Set up automated security scanning",
    "Implement API versioning with security policies"
  ]
}